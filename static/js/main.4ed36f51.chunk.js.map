{"version":3,"sources":["pages/index.js","utils/source.js","index.js"],"names":["HomePage","data","results","currentTime","Date","getTime","i","push","time","moment","format","msg","index","getChatSource","useState","slice","messages","setMessages","fistItemindex","setIndex","inputEl","useRef","lastoneEl","onButtonClick","current","focus","value","trim","concat","tag","scrollIntoView","behavior","computedData","console","log","window","scrollY","useEffect","getData","func","wait","timeout","clearTimeout","setTimeout","debounce","addEventListener","removeEventListener","className","src","alt","map","item","key","toString","ref","type","onKeyPress","e","nativeEvent","keyCode","placeholder","onClick","ReactDOM","render","document","getElementById"],"mappings":"0LA4FeA,MAzEf,WACI,IAAMC,EClBmB,WAGzB,IAFA,IAAMC,EAAU,GACZC,GAAc,IAAIC,MAAOC,UAAY,IACjCC,EAAE,EAAEA,EAAE,IAAIA,IACdJ,EAAQK,KAAK,CAACC,KAAMC,IAAON,GAAaO,OAAO,SAAUC,IAAI,YAAD,OAAcL,GAAKM,MAAMN,IACrFH,IAGJ,OAAOD,EDUMW,GADG,EAEgBC,mBAASb,EAAKc,OAAO,IAFrC,mBAETC,EAFS,KAECC,EAFD,OAGkBH,mBAASE,EAAS,GAAGJ,OAHvC,mBAGTM,EAHS,KAGMC,EAHN,KAIVC,EAAUC,iBAAO,MACjBC,EAAYD,iBAAO,MAEnBE,EAAgB,WAClBH,EAAQI,QAAQC,QAChB,IAAItB,GAAc,IAAIC,MAAOC,UAAY,IACL,KAAjCe,EAAQI,QAAQE,MAAMC,QACrBV,EAAYD,EAASY,OAAO,CACxBpB,KAAKC,IAAON,GAAaO,OAAO,SAChCC,IAAI,GAAD,OAAKS,EAAQI,QAAQE,OACxBG,IAAI,UAGZP,EAAUE,QAAQM,eAAe,CAAEC,SAAU,WAC7CX,EAAQI,QAAQE,MAAQ,IAStBM,EAAe,WACjBC,QAAQC,IAAI,KACU,IAAnBC,OAAOC,UACNnB,EAAYhB,EAAKc,MAAMG,EAAgB,EAAEA,GAAeU,OAAOZ,IAC/DG,EAASD,EAAgB,KAajC,OATAmB,qBAAU,WACN,IAAMC,EAlDd,SAAkBC,EAAMC,GACpB,IAAIC,EACJ,OAAO,WACHC,aAAaD,GACbA,EAAUE,WAAWJ,EAAMC,IA8CXI,CAASZ,EAAa,KAGtC,OAFAC,QAAQC,IAAI,KACZC,OAAOU,iBAAiB,SAAUP,GAAS,GACpC,WACLH,OAAOW,oBAAoB,SAAUR,GAAS,OAKhD,6BACI,4BAAQS,UAAU,kBACd,0BAAMA,UAAU,iBAAhB,KACA,yBAAKA,UAAU,iBACX,yBAAKC,IAAI,2DAA2DC,IAAI,WAD5E,WAGA,0BAAMF,UAAU,iBAAhB,QAEJ,yBAAKA,UAAU,eAEP/B,EAASkC,KAAI,SAACC,EAAMvC,GAAP,OACT,yBAAKwC,IAAKxC,EAAMyC,WAAYN,UAAS,sBAAiBI,EAAKtB,IAAM,eAAgB,KAC7E,yBAAKkB,UAAU,eAAeI,EAAK3C,MACnC,yBAAKuC,UAAU,eAAeI,EAAKxC,SAI/C,yBAAK2C,IAAKhC,KAGd,4BAAQyB,UAAU,kBACd,2BAAOO,IAAKlC,EAASmC,KAAK,OAAOC,WA7C1B,SAACC,GACa,KAA1BA,EAAEC,YAAYC,SACbpC,KA2C6DwB,UAAU,eAAea,YAAY,YAC9F,4BAAQC,QAAStC,EAAewB,UAAU,iBAA1C,WEjFhBe,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.4ed36f51.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { getChatSource } from '../utils/source';\r\nimport moment from 'moment';\r\nimport './index.css';\r\n\r\nfunction debounce(func, wait) {\r\n    var timeout;\r\n    return function () {\r\n        clearTimeout(timeout)\r\n        timeout = setTimeout(func, wait);\r\n    }\r\n}\r\n\r\n/**\r\n* call function within Transaction\r\n* @param {Function} onButtonClick 点击send,非空时发送数据,清空输入框\r\n* @param {Function} onEnterKey 输入框enter发送数据,其它同上\r\n* @param {Function} computedData 滚动时根据index获取需要展示的数据,默认滚动到头部时加载5条数据\r\n*/\r\nfunction HomePage() {\r\n    const data = getChatSource();\r\n    const [messages, setMessages] = useState(data.slice(-5));\r\n    const [fistItemindex, setIndex] = useState(messages[0].index);\r\n    const inputEl = useRef(null);\r\n    const lastoneEl = useRef(null);\r\n\r\n    const onButtonClick = () => {\r\n        inputEl.current.focus();\r\n        let currentTime = new Date().getTime() - 10000000;\r\n        if(inputEl.current.value.trim() !== ''){\r\n            setMessages(messages.concat({\r\n                time:moment(currentTime).format(\"HH:MM\"), \r\n                msg: `${inputEl.current.value}`, \r\n                tag:'self'})\r\n            );\r\n        }\r\n        lastoneEl.current.scrollIntoView({ behavior: \"smooth\" });\r\n        inputEl.current.value = '';\r\n    };\r\n\r\n    const onEnterKey = (e) => {\r\n        if(e.nativeEvent.keyCode === 13){\r\n            onButtonClick();\r\n        }\r\n    };\r\n\r\n    const computedData = () => {\r\n        console.log('1')\r\n        if(window.scrollY === 0){\r\n            setMessages(data.slice(fistItemindex - 5,fistItemindex).concat(messages));\r\n            setIndex(fistItemindex - 5);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getData = debounce(computedData,1000);\r\n        console.log('1')\r\n        window.addEventListener('scroll', getData, false)\r\n        return () => {\r\n          window.removeEventListener('scroll', getData, false)\r\n        }\r\n    })\r\n    \r\n    return (\r\n        <div>\r\n            <header className=\"header-wrapper\">\r\n                <span className=\"header-action\">&lt;</span>\r\n                <div className=\"header-avatar\">\r\n                    <img src='https://static.it1352.com/Content/img/login_register.png' alt=\"avatar\" />Johnson\r\n                </div>\r\n                <span className=\"header-action\">...</span>\r\n            </header>\r\n            <div className=\"dialog-list\">\r\n                {\r\n                    messages.map((item, index) => \r\n                        <div key={index.toString()} className={`dialog-item ${item.tag ? 'self-message': ''}`}>\r\n                            <div className=\"dialog-time\">{item.time}</div>\r\n                            <div className=\"dialog-text\">{item.msg}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n                <div ref={lastoneEl}></div>\r\n            </div>\r\n\r\n            <footer className=\"footer-wrapper\">\r\n                <input ref={inputEl} type=\"text\" onKeyPress={onEnterKey} className=\"footer-input\" placeholder=\"Message\" />\r\n                <button onClick={onButtonClick} className=\"footer-button\">Send</button>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import moment from 'moment';\r\n\r\nexport const getChatSource = () => {\r\n    const results = [];\r\n    let currentTime = new Date().getTime() - 10000000;\r\n    for(let i=0;i<100;i++) {\r\n        results.push({time: moment(currentTime).format(\"HH:MM\"), msg: `Message \"${i}`, index:i});\r\n        currentTime++;\r\n    }\r\n\r\n    return results;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './pages/index';\n\n\nReactDOM.render(\n  <Home />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}